services:
  django:
    container_name: django_app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/home/app
      - static-data:/home/app/vol
    depends_on:
      - db
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - main

  db:
    restart: always
    container_name: postgres_db
    image: postgres:16.6-alpine
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      - POSTGRES_DB=${POSTDB_NAME}
      - POSTGRES_USER=${POSTDB_USER}
      - POSTGRES_PASSWORD=${POSTDB_PASSWORD}
    healthcheck:
      test: ['CMD', "pg_isready", '-q', "-d", "postgres", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - main

  celery:
    restart: always
    container_name: celery
    build:
      context: .
      dockerfile: celery_config/Dockerfile
    volumes:
      - ./:/home/app
    depends_on:
      - redis
    networks:
      - main

  redis:
    container_name: redis_docker
    restart: always
    image: redis:7.4-alpine
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - main

  nginx:
    container_name: nginx
    depends_on:
      - django
    restart: always
    build:
      context: ./nginx
    volumes:
      - static-data:/vol
    networks:
      - main

#  pgadmin4:
#    container_name: pgadmin
#    networks:
#      - main
#    image: dpage/pgadmin4:2024-12-09-2

volumes:
  redis_data:
  postgres-data:
  static-data:

networks:
  main:
    driver: bridge
